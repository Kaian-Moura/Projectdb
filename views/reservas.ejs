<!DOCTYPE html>
<html>
  <head>
    <title>Sistema de Reserva de Salas</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      body {
        font-family: Arial, sans-serif;
        line-height: 1.6;
        margin: 0;
        padding: 20px;
        background-color: #f5f5f5;
      }
      .container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      h1 {
        color: #333;
        border-bottom: 2px solid #ddd;
        padding-bottom: 10px;
      }
      .erro {
        color: red;
        background-color: #ffeeee;
        padding: 10px;
        border: 1px solid #ffcccc;
        border-radius: 4px;
        margin-bottom: 20px;
      }
      .success {
        color: green;
        background-color: #eeffee;
        padding: 10px;
        border: 1px solid #ccffcc;
        border-radius: 4px;
        margin-bottom: 20px;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
      }
      table,
      th,
      td {
        border: 1px solid #ddd;
      }
      th,
      td {
        padding: 12px;
        text-align: left;
      }
      th {
        background-color: #f2f2f2;
        font-weight: bold;
      }
      tr:hover {
        background-color: #f5f5f5;
      }
      .form-section {
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 5px;
        margin-bottom: 20px;
      }
      .form-group {
        margin-bottom: 15px;
      }
      label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }
      input,
      select,
      textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
      button {
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 10px 15px;
        cursor: pointer;
        border-radius: 4px;
      }
      button:hover {
        background-color: #45a049;
      }
      .actions {
        display: flex;
        gap: 10px;
      }
      .btn-edit {
        background-color: #2196f3;
      }
      .btn-edit:hover {
        background-color: #0b7dda;
      }
      .btn-delete {
        background-color: #f44336;
      }
      .btn-delete:hover {
        background-color: #da190b;
      }
      .filter-section {
        margin-bottom: 20px;
        padding: 10px;
        background-color: #eee;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Sistema de Reserva de Salas</h1>

      <% if (typeof erro !== 'undefined' && erro) { %>
      <div class="erro"><%= erro %></div>
      <% } %>

      <div class="form-section">
        <h2>Reservar Sala</h2>
        <form id="reservationForm" action="/api/reservas" method="post">
          <input type="hidden" id="reservationId" name="id" />

          <div class="form-group">
            <label for="sala">Sala:</label>
            <select id="sala" name="sala_id" required>
              <option value="">Selecione uma sala</option>
              <% if (salas && salas.length > 0) { %>
                <% salas.forEach(function(sala) { %>
                  <option value="<%= sala.id %>">
                    <%= sala.nome %> (Cap: <%= sala.capacidade %>) - <%= sala.localizacao %>
                  </option>
                <% }); %>
              <% } %>
            </select>
          </div>

          <div class="form-group">
            <label for="usuario_nome">Seu Nome:</label>
            <input type="text" id="usuario_nome" name="usuario_nome" required />
          </div>

          <div class="form-group">
            <label for="data_inicio">Data e Hora de Início:</label>
            <input
              type="datetime-local"
              id="data_inicio"
              name="data_inicio"
              required
            />
          </div>

          <div class="form-group">
            <label for="data_fim">Data e Hora de Término:</label>
            <input
              type="datetime-local"
              id="data_fim"
              name="data_fim"
              required
            />
          </div>

          <div class="form-group">
            <label for="proposito">Propósito da Reserva:</label>
            <textarea id="proposito" name="proposito" rows="3"></textarea>
          </div>

          <button type="submit">Reservar Sala</button>
          <button
            type="button"
            id="cancelEdit"
            style="background-color: #ccc; display: none"
          >
            Cancelar Edição
          </button>
        </form>
      </div>

      <div class="filter-section">
        <h2>Minhas Reservas</h2>
        <div class="form-group">
          <label for="filterName">Filtrar por nome:</label>
          <input
            type="text"
            id="filterName"
            placeholder="Digite seu nome para ver suas reservas"
          />
          <button id="filterButton">Filtrar</button>
          <button id="clearFilter">Limpar Filtro</button>
        </div>
      </div>

      <h2>Todas as Reservas</h2>
      <% if (reservas && reservas.length > 0) { %>
      <table>
        <thead>
          <tr>
            <th>Sala</th>
            <th>Responsável</th>
            <th>Início</th>
            <th>Término</th>
            <th>Propósito</th>
            <th>Status</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          <% reservas.forEach(function(reserva) { %>
          <tr
            data-id="<%= reserva.id %>"
            data-sala="<%= reserva.sala_id %>"
            data-usuario="<%= reserva.usuario_nome %>"
            data-proposito="<%= reserva.proposito || '' %>"
            data-inicio="<%= reserva.data_inicio %>"
            data-fim="<%= reserva.data_fim %>"
          >
            <td><%= reserva.sala_nome %></td>
            <td><%= reserva.usuario_nome %></td>
            <td><%= formatDate(reserva.data_inicio) %></td>
            <td><%= formatDate(reserva.data_fim) %></td>
            <td><%= reserva.proposito || '-' %></td>
            <td><%= reserva.status || 'confirmada' %></td>
            <td class="actions">
              <button
                class="btn-edit"
                onclick="editReservation(reserva.id)"
              >
                Editar
              </button>
              <button
                class="btn-delete"
                onclick="deleteReservation(reserva.id)"
              >
                Cancelar
              </button>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
      <% } else { %>
      <p>Nenhuma reserva disponível no momento.</p>
      <% } %>

      <a href="/">Voltar para página inicial</a>
    </div>

    <script>
      // Função para formatar data para input datetime-local
      function formatDateForInput(dateString) {
        if (!dateString) return "";
        try {
          const date = new Date(dateString);
          if (isNaN(date.getTime())) {
            console.warn("Data inválida:", dateString);
            return "";
          }
          const year = date.getFullYear();
          const month = String(date.getMonth() + 1).padStart(2, "0");
          const day = String(date.getDate()).padStart(2, "0");
          const hours = String(date.getHours()).padStart(2, "0");
          const minutes = String(date.getMinutes()).padStart(2, "0");
          return `${year}-${month}-${day}T${hours}:${minutes}`;
        } catch (e) {
          console.error("Erro ao formatar data:", e, dateString);
          return "";
        }
      }

      // Editar reserva
      function editReservation(id) {
        try {
          const row = document.querySelector(`tr[data-id="${id}"]`);
          if (!row) {
            console.error("Linha não encontrada para o id:", id);
            return;
          }

          document.getElementById("reservationId").value = id;
          document.getElementById("sala").value = row.dataset.sala;
          document.getElementById("usuario_nome").value = row.dataset.usuario;
          document.getElementById("proposito").value =
            row.dataset.proposito || "";
          document.getElementById("data_inicio").value = formatDateForInput(
            row.dataset.inicio
          );
          document.getElementById("data_fim").value = formatDateForInput(
            row.dataset.fim
          );

          // Alterar comportamento do formulário para atualização
          const form = document.getElementById("reservationForm");
          form.action = `/api/reservas/${id}`;
          form.setAttribute("method", "post");

          // Adicionar campo oculto para indicar método PUT
          let methodInput = document.getElementById("_method");
          if (!methodInput) {
            methodInput = document.createElement("input");
            methodInput.type = "hidden";
            methodInput.name = "_method";
            methodInput.id = "_method";
            form.appendChild(methodInput);
          }
          methodInput.value = "PUT";

          // Mostrar botão de cancelar edição
          document.getElementById("cancelEdit").style.display = "";
        } catch (e) {
          console.error("Erro ao editar reserva:", e);
        }
      }

      // Cancelar edição
      document.getElementById("cancelEdit").addEventListener("click", function () {
        const form = document.getElementById("reservationForm");
        form.action = "/api/reservas";
        form.setAttribute("method", "post");
        document.getElementById("reservationId").value = "";
        document.getElementById("sala").value = "";
        document.getElementById("usuario_nome").value = "";
        document.getElementById("proposito").value = "";
        document.getElementById("data_inicio").value = "";
        document.getElementById("data_fim").value = "";
        // Remover campo _method se existir
        let methodInput = document.getElementById("_method");
        if (methodInput) {
          methodInput.remove();
        }
        this.style.display = "none";
      });

      // Deletar reserva
      function deleteReservation(id) {
        if (!confirm("Tem certeza que deseja cancelar esta reserva?")) return;
        fetch(`/api/reservas/${id}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((res) => {
            if (res.ok) {
              location.reload();
            } else {
              alert("Erro ao cancelar reserva.");
            }
          })
          .catch((err) => {
            alert("Erro ao cancelar reserva.");
            console.error(err);
          });
      }

      // Filtro por nome
      document.getElementById("filterButton").addEventListener("click", function () {
        const filterName = document.getElementById("filterName").value.trim().toLowerCase();
        const rows = document.querySelectorAll("tbody tr");
        rows.forEach((row) => {
          const usuario = (row.dataset.usuario || "").toLowerCase();
          row.style.display = filterName && !usuario.includes(filterName) ? "none" : "";
        });
      });

      // Limpar filtro
      document.getElementById("clearFilter").addEventListener("click", function () {
        document.getElementById("filterName").value = "";
        const rows = document.querySelectorAll("tbody tr");
        rows.forEach((row) => (row.style.display = ""));
      });
    </script>
  </body>
</html>